defaultTasks 'build'

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'license'
apply plugin: 'io.codearte.nexus-staging'

dependencies {
  compile rootProject

  compile 'com.jcraft:jsch:0.1.55'
  compile 'com.google.cloud:google-cloud-os-login:1.2.2'
  compile 'com.google.apis:google-api-services-compute:v1-rev20210310-1.31.0'


  // Test dependencies
  testCompile rootProject
  testCompile('com.xebialabs.cloud:overcast:2.5.1') {
    exclude group: 'com.xebialabs.overthere', module: 'overthere'
    exclude group: 'net.schmizz', module: 'sshj'
  }
  testCompile 'org.hamcrest:hamcrest-core:1.3'
  testCompile 'org.hamcrest:hamcrest-library:1.3'
  testImplementation 'org.mockito:mockito-core:3.9.0'

  testCompile('org.testng:testng:5.14.10') {
    exclude group: "junit", module: "junit"
  }
}

test {
  useTestNG()

  excludes = ['**/*Itest.*']

  maxHeapSize = "512m"
}

task sourcesJar(type: Jar) {
  from sourceSets.main.allSource
  archiveClassifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  archiveClassifier = 'javadoc'
  from javadoc.destinationDir
}

artifacts {
  archives sourcesJar, javadocJar
}

license {
  header project.file('HEADER')
  ignoreFailures true
}

signing {
  required { gradle.taskGraph.hasTask('uploadArchives') }
  sign configurations.archives
}

nexusStaging {
  packageGroup = "com.xebialabs"
}

uploadArchives {
  if(project.hasProperty('sonatypeUsername')) {
    repositories.mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      configuration = configurations.archives

      repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2') {
        authentication(userName: sonatypeUsername, password: sonatypePassword)
      }
      snapshotRepository(url: 'https://oss.sonatype.org/content/repositories/snapshots/') {
        authentication(userName: sonatypeUsername, password: sonatypePassword)
      }

      pom.project {
        name 'Overthere GCP'
        description 'Remote file manipulation and process execution framework for Java'
        packaging 'jar'
        url 'https://github.com/xebialabs/overthere'
        inceptionYear '2011'

        scm {
          url 'https://github.com/xebialabs/overthere'
        }

        licenses {
          license {
            name 'GPLv2 with XebiaLabs FLOSS License Exception'
            url 'https://github.com/xebialabs/overthere/blob/master/LICENSE'
            distribution 'repo'
          }
        }

        developers {
          developer {
            id 'vpartington'
            name 'Vincent Partington'
            url 'http://www.xebialabs.com/'
            email 'vpartington@xebialabs.com'
            roles {
              role 'Developer'
            }
          }
          developer {
            id 'hierynomus'
            name 'Jeroen van Erp'
            url 'http://www.xebialabs.com/'
            email 'jvanerp@xebialabs.com'
            roles {
              role 'Developer'
            }
          }
        }
      }
    }
  }
}
